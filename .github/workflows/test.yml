name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore: []

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check formatting
        run: poetry run black --check .

  linting:
    runs-on: ubuntu-latest
    needs:
      - formatting
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check code
        run: poetry run flake8

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: Setup mamba
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          channels: "conda-forge"
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - name: Run pytest
        shell: bash -el {0}
        run: poetry run coverage run -m pytest tests/tests.py

      - name: Run Coverage
        run: poetry run coverage report -m
